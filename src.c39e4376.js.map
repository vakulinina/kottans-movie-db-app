{"version":3,"sources":["framework/element.js","components/PopularMovie/PopularMovie.js","components/SearchByMovie/SearchByMovie.js","components/MoviesGridItem/MoviesGridItem.js","components/MoviesGrid/MoviesGrid.js","components/App.js","framework/render.js","data/currentState.js","data/moviesData.js","index.js"],"names":["createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","PopularMovie","backdrop_path","original_title","overview","currentState","popularMovies","styles","SearchByMovie","searchValue","event","performSearch","target","MoviesGridItem","poster_path","MoviesGrid","title","gridItems","searchResult","map","movie","App","renderApp","getElementById","innerHTML","selectedMovie","fetch","then","response","json","data","results","finally","loadPopularMovies"],"mappings":"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","file":"src.c39e4376.js","sourceRoot":"../src","sourcesContent":["/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './PopularMovie.css';\n\nexport default function PopularMovie() {\n  const { backdrop_path, original_title, overview } = window.currentState.popularMovies[0];\n  return (\n    <article class={styles['popular-movie']}>\n      <img\n        class={styles['popular-movie-img']}\n        src={`http://image.tmdb.org/t/p/w1280/${backdrop_path}`}\n      />\n      <div class={styles['popular-movie-description']}>\n        <h2>{original_title}</h2>\n        <p>{overview}</p>\n      </div>\n    </article>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './SearchByMovie.css';\n\nexport default function SearchByMovie() {\n  return (\n    <input\n      class={styles['search-input']}\n      type=\"search\"\n      value={window.currentState.searchValue || ''}\n      onChange={event => window.performSearch(event.target.value)}\n    />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './MoviesGridItem.css';\n\nexport default function MoviesGridItem({ original_title, poster_path }) {\n  return (\n    <a class={styles['movies-item']} href=\"#\" title={original_title}>\n      <img\n        class={styles['movies-item-img']}\n        src={`http://image.tmdb.org/t/p/w500/${poster_path}`}\n        alt={original_title}\n      />\n    </a>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './MoviesGrid.css';\nimport MoviesGridItem from '../MoviesGridItem/MoviesGridItem';\n\nexport default function MoviesGrid() {\n  let title;\n  let gridItems;\n  const { searchValue, searchResult, popularMovies } = window.currentState;\n  if (searchValue) {\n    gridItems = (\n      <>\n        {searchResult.map(movie => (\n          <MoviesGridItem original_title={movie.original_title} poster_path={movie.poster_path} />\n        ))}\n      </>\n    );\n    // gridItems = searchResult.map(movie => MoviesGridItem(movie));\n    title = 'Search Result';\n  } else {\n    gridItems = (\n      <>\n        {popularMovies.map(movie => (\n          <MoviesGridItem original_title={movie.original_title} poster_path={movie.poster_path} />\n        ))}\n      </>\n    );\n    // gridItems = popularMovies.map(movie => MoviesGridItem(movie));\n    title = 'Popular Movies';\n  }\n  return (\n    <div class={styles['movies-list-wrap']}>\n      <h3>{title}</h3>\n      <div class={styles['movies-list']}>{gridItems}</div>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport PopularMovie from './PopularMovie/PopularMovie';\nimport SearchByMovie from './SearchByMovie/SearchByMovie';\nimport MoviesGrid from './MoviesGrid/MoviesGrid';\n\nexport default function App() {\n  return (\n    <>\n      <PopularMovie />\n      <SearchByMovie />\n      <MoviesGrid />\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from './element';\nimport App from '../components/App';\n\n// let Component, Target;\n\nexport default function renderApp() {\n  document.getElementById('app-root').innerHTML = '';\n  document.getElementById('app-root').appendChild(<App />);\n}\n","const currentState = {\n  searchValue: '',\n  searchResult: [],\n  popularMovies: [],\n  selectedMovie: null,\n};\n\nexport default currentState;\n","import renderApp from '../framework/render';\n\nexport function performSearch(value) {\n  window.currentState.searchValue = value;\n  const { searchValue } = window.currentState;\n  if (searchValue) {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${process.env.TMDB_API_KEY}&language=en-US&query=${searchValue}`,\n    )\n      .then(response => response.json())\n      .then(data => {\n        window.currentState.searchResult = data.results;\n      })\n      .finally(renderApp);\n  } else {\n    renderApp();\n  }\n}\n\nexport function loadPopularMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.TMDB_API_KEY}&language=en-US`,\n  )\n    .then(response => response.json())\n    .then(data => {\n      window.currentState.popularMovies = data.results;\n    });\n}\n","import renderApp from './framework/render';\nimport currentState from './data/currentState';\nimport App from './components/App';\nimport { loadPopularMovies, performSearch } from './data/moviesData';\n\nwindow.performSearch = performSearch;\nwindow.currentState = currentState;\n\n(function initApp() {\n  loadPopularMovies().finally(renderApp);\n})();\n"]}