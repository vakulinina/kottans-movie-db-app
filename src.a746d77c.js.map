{"version":3,"sources":["framework/hooks.js","framework/element.js","framework/render.js","framework/index.js","components/PopularMovie/PopularMovie.js","components/SearchByMovie/SearchByMovie.js","components/MoviesGridItem/MoviesGridItem.js","components/MoviesGrid/MoviesGrid.js","components/App.js","index.js"],"names":["current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","createElement","element","DocumentFragment","document","Object","entries","name","value","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","render","timer","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","PopularMovie","movie","backdrop_path","original_title","overview","styles","SearchByMovie","onChange","event","MoviesGridItem","originalTitle","posterPath","no_image_backdrop","MoviesGrid","searchValue","searchResult","popularMovies","title","gridItems","map","poster_path","App","setSearchValue","setSearchResult","setPopularMovies","fetch","then","response","json","data","results","getElementById"],"mappings":"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","file":"src.a746d77c.js","sourceRoot":"../src","sourcesContent":["export const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = typeof action === 'function' ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\n\nimport { createFunctionElement } from './hooks';\n\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from './element';\nimport { current } from './hooks';\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n\nexport default render;\n","import { createElement, createFragment } from './element';\nimport { render } from './render';\nimport { useState, useEffect } from './hooks';\n\nexport { createElement, createFragment } from './element';\nexport { render } from './render';\nexport { useState, useEffect } from './hooks';\n\nexport default {\n  createElement,\n  createFragment,\n  useState,\n  useEffect,\n  render,\n};\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './PopularMovie.css';\n\nexport default function PopularMovie({ movie }) {\n  if (!movie) return <p>Loading...</p>;\n  const { backdrop_path, original_title, overview } = movie;\n  return (\n    <article class={styles['popular-movie']}>\n      <img\n        class={styles['popular-movie-img']}\n        src={`http://image.tmdb.org/t/p/w1280/${backdrop_path}`}\n      />\n      <div class={styles['popular-movie-description']}>\n        <h2>{original_title}</h2>\n        <p>{overview}</p>\n      </div>\n    </article>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './SearchByMovie.css';\n\nexport default function SearchByMovie({ value, onChange }) {\n  return (\n    <input\n      class={styles['search-input']}\n      type=\"search\"\n      value={value}\n      onChange={event => onChange(event.target.value)}\n    />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './MoviesGridItem.css';\nimport { no_image_backdrop } from '../MoviesGridItem/*.jpg';\n\nexport default function MoviesGridItem({ originalTitle, posterPath }) {\n  return (\n    <a class={styles['movies-item']} href=\"#\" title={originalTitle}>\n      <img\n        class={styles['movies-item-img']}\n        src={posterPath ? `http://image.tmdb.org/t/p/w500/${posterPath}` : no_image_backdrop}\n        alt={originalTitle}\n      />\n    </a>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './MoviesGrid.css';\nimport MoviesGridItem from '../MoviesGridItem/MoviesGridItem';\n\nexport default function MoviesGrid({ searchValue, searchResult, popularMovies }) {\n  let title;\n  let gridItems;\n\n  if (!popularMovies) {\n    return <p>Loading...</p>;\n  }\n\n  if (searchValue) {\n    gridItems = (\n      <>\n        {searchResult.map(movie => (\n          <MoviesGridItem originalTitle={movie.original_title} posterPath={movie.poster_path} />\n        ))}\n      </>\n    );\n    title = 'Search Result';\n  } else {\n    gridItems = (\n      <>\n        {popularMovies.map(movie => (\n          <MoviesGridItem originalTitle={movie.original_title} posterPath={movie.poster_path} />\n        ))}\n      </>\n    );\n    title = 'Popular Movies';\n  }\n\n  return (\n    <div class={styles['movies-list-wrap']}>\n      <h3>{title}</h3>\n      <div class={styles['movies-list']}>{gridItems}</div>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment, useState, useEffect } from '../framework';\nimport PopularMovie from './PopularMovie/PopularMovie';\nimport SearchByMovie from './SearchByMovie/SearchByMovie';\nimport MoviesGrid from './MoviesGrid/MoviesGrid';\n\nexport default function App() {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [popularMovies, setPopularMovies] = useState([]);\n\n  useEffect(() => {\n    if (searchValue) {\n      fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=${process.env.TMDB_API_KEY}&language=en-US&query=${searchValue}`,\n      )\n        .then(response => response.json())\n        .then(data => {\n          setSearchResult(data.results);\n        });\n    }\n  }, [searchValue]);\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.TMDB_API_KEY}&language=en-US`,\n    )\n      .then(response => response.json())\n      .then(data => {\n        setPopularMovies(data.results);\n      });\n  }, []);\n\n  return (\n    <>\n      <PopularMovie movie={popularMovies ? popularMovies[0] : null} />\n      <SearchByMovie value={searchValue} onChange={setSearchValue} />\n      <MoviesGrid\n        searchValue={searchValue}\n        searchResult={searchResult}\n        popularMovies={popularMovies}\n      />\n    </>\n  );\n}\n","import { render } from './framework';\nimport App from './components/App';\n\nrender(App, document.getElementById('app-root'));\n"]}